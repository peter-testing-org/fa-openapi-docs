---
openapi: 3.0.3
info:
  title: FreeAgent
  version: 1.0.0
  contact: {}
security:
  - oauth2Auth: []
servers:
  - url: http://api.lvh.me:3000
components:
  securitySchemes:
    oauth2Auth:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: http://api.lvh.me:3000/v2/approve_app
          tokenUrl: http://api.lvh.me:3000/v2/token_endpoint
          scopes: {}
paths:
  /v2/attachments/{id}:
    get:
      tags:
        - Attachments
      summary: Show Attachment
      description: Show Attachment
      operationId: showAttachment
      responses:
        '200':
          description: ''
    delete:
      tags:
        - Attachments
      summary: Delete Attachment
      description: Delete Attachment
      operationId: deleteAttachment
      responses:
        '200':
          description: ''
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          example: ''
  /v2/bank_accounts:
    get:
      tags:
        - Bank Accounts
      summary: List Bank Accounts
      description: List Bank Accounts
      operationId: listBankAccounts
      parameters:
        - name: view
          in: query
          schema:
            type: string
            example: standard_bank_accounts
      responses:
        '200':
          description: ''
    post:
      tags:
        - Bank Accounts
      summary: Create Bank Account
      description: Create Bank Account
      operationId: createBankAccount
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                bank_account:
                  type: object
                  properties:
                    created_at:
                      type: string
                      example: '2011-07-28T11:25:11Z'
                    is_personal:
                      type: boolean
                      example: false
                    name:
                      type: string
                      example: Default bank account
                    opening_balance:
                      type: string
                      example: '0.0'
                    status:
                      type: string
                      example: active
                    type:
                      type: string
                      example: StandardBankAccount
                    updated_at:
                      type: string
                      example: '2011-07-28T11:25:20Z'
            examples:
              Create Bank Account:
                value:
                  bank_account:
                    created_at: '2011-07-28T11:25:11Z'
                    is_personal: false
                    name: Default bank account
                    opening_balance: '0.0'
                    status: active
                    type: StandardBankAccount
                    updated_at: '2011-07-28T11:25:20Z'
      responses:
        '200':
          description: ''
  /v2/bank_accounts/{id}:
    get:
      tags:
        - Bank Accounts
      summary: Show Bank Account
      description: Show Bank Account
      operationId: showBankAccount
      responses:
        '200':
          description: ''
    put:
      tags:
        - Bank Accounts
      summary: Update Bank Account
      description: Update Bank Account
      operationId: updateBankAccount
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                bank_account:
                  type: object
                  properties:
                    created_at:
                      type: string
                      example: '2011-07-28T11:25:11Z'
                    is_personal:
                      type: boolean
                      example: false
                    name:
                      type: string
                      example: Default bank account
                    opening_balance:
                      type: string
                      example: '0.0'
                    status:
                      type: string
                      example: active
                    type:
                      type: string
                      example: StandardBankAccount
                    updated_at:
                      type: string
                      example: '2011-07-28T11:25:20Z'
            examples:
              Update Bank Account:
                value:
                  bank_account:
                    created_at: '2011-07-28T11:25:11Z'
                    is_personal: false
                    name: Default bank account
                    opening_balance: '0.0'
                    status: active
                    type: StandardBankAccount
                    updated_at: '2011-07-28T11:25:20Z'
      responses:
        '200':
          description: ''
    delete:
      tags:
        - Bank Accounts
      summary: Delete Bank Account
      description: Delete Bank Account
      operationId: deleteBankAccount
      responses:
        '200':
          description: ''
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          example: ''
  /v2/bank_transaction_explanations:
    get:
      tags:
        - Bank Transaction Explanations
      summary: List all bank transaction explanations
      description: List all bank transaction explanations
      operationId: listAllBankTransactionExplanations
      parameters:
        - name: from_date
          in: query
          schema:
            type: string
            example: '2018-01-01'
        - name: to_date
          in: query
          schema:
            type: string
            example: '2018-01-01'
        - name: updated_since
          in: query
          schema:
            type: string
            example: '2018-01-01'
        - name: bank_account
          in: query
          schema:
            type: string
            example: '{{url}}/v2/bank_accounts/:id'
      responses:
        '200':
          description: ''
    put:
      tags:
        - Bank Transaction Explanations
      summary: Update a bank transaction explanation
      description: Update a bank transaction explanation
      operationId: updateABankTransactionExplanation
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                bank_transaction_explanation:
                  type: object
                  properties:
                    attachment:
                      type: object
                      properties:
                        content_src:
                          type: string
                          example: >-
                            https://s3.amazonaws.com/freeagent-dev/attachments/1/original.png?AWSAccessKeyId=1K3MW21E6T8KWBY84B02&Expires=1314281186&Signature=GFAKDo%2Bi%2FsUMTYEgg6ZWGysB4k4%3D
                        content_type:
                          type: string
                          example: image/png
                        file_name:
                          type: string
                          example: barcode.png
                        file_size:
                          type: number
                          example: 7673
                        url:
                          type: string
                          example: https://api.freeagent.com/v2/attachments/3
                    bank_account:
                      type: string
                      example: https://api.freeagent.com/v2/bank_accounts/1
                    bank_transaction:
                      type: string
                      example: https://api.freeagent.com/v2/bank_transactions/8
                    category:
                      type: string
                      example: https://api.freeagent.com/v2/categories/285
                    dated_on:
                      type: string
                      example: '2010-05-01'
                    description:
                      type: string
                      example: harness end-to-end e-business
                    gross_value:
                      type: string
                      example: '-730.0'
                    project:
                      type: string
                      example: https://api.freeagent.com/v2/projects/1
                    rebill_factor:
                      type: string
                      example: '800'
                    rebill_type:
                      type: string
                      example: price
            examples:
              Update a bank transaction explanation:
                value:
                  bank_transaction_explanation:
                    attachment:
                      content_src: >-
                        https://s3.amazonaws.com/freeagent-dev/attachments/1/original.png?AWSAccessKeyId=1K3MW21E6T8KWBY84B02&Expires=1314281186&Signature=GFAKDo%2Bi%2FsUMTYEgg6ZWGysB4k4%3D
                      content_type: image/png
                      file_name: barcode.png
                      file_size: 7673
                      url: https://api.freeagent.com/v2/attachments/3
                    bank_account: https://api.freeagent.com/v2/bank_accounts/1
                    bank_transaction: https://api.freeagent.com/v2/bank_transactions/8
                    category: https://api.freeagent.com/v2/categories/285
                    dated_on: '2010-05-01'
                    description: harness end-to-end e-business
                    gross_value: '-730.0'
                    project: https://api.freeagent.com/v2/projects/1
                    rebill_factor: '800'
                    rebill_type: price
      responses:
        '200':
          description: ''
    post:
      tags:
        - Bank Transaction Explanations
      summary: Create a bank transaction explanation
      description: Create a bank transaction explanation
      operationId: createABankTransactionExplanation
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                bank_transaction_explanation:
                  type: object
                  properties:
                    attachment:
                      type: object
                      properties:
                        content_src:
                          type: string
                          example: >-
                            https://s3.amazonaws.com/freeagent-dev/attachments/1/original.png?AWSAccessKeyId=1K3MW21E6T8KWBY84B02&Expires=1314281186&Signature=GFAKDo%2Bi%2FsUMTYEgg6ZWGysB4k4%3D
                        content_type:
                          type: string
                          example: image/png
                        file_name:
                          type: string
                          example: barcode.png
                        file_size:
                          type: number
                          example: 7673
                        url:
                          type: string
                          example: https://api.freeagent.com/v2/attachments/3
                    bank_account:
                      type: string
                      example: https://api.freeagent.com/v2/bank_accounts/1
                    bank_transaction:
                      type: string
                      example: https://api.freeagent.com/v2/bank_transactions/8
                    category:
                      type: string
                      example: https://api.freeagent.com/v2/categories/285
                    dated_on:
                      type: string
                      example: '2010-05-01'
                    description:
                      type: string
                      example: harness end-to-end e-business
                    gross_value:
                      type: string
                      example: '-730.0'
                    project:
                      type: string
                      example: https://api.freeagent.com/v2/projects/1
                    rebill_factor:
                      type: string
                      example: '0.25'
                    rebill_type:
                      type: string
                      example: markup
            examples:
              Create a bank transaction explanation:
                value:
                  bank_transaction_explanation:
                    attachment:
                      content_src: >-
                        https://s3.amazonaws.com/freeagent-dev/attachments/1/original.png?AWSAccessKeyId=1K3MW21E6T8KWBY84B02&Expires=1314281186&Signature=GFAKDo%2Bi%2FsUMTYEgg6ZWGysB4k4%3D
                      content_type: image/png
                      file_name: barcode.png
                      file_size: 7673
                      url: https://api.freeagent.com/v2/attachments/3
                    bank_account: https://api.freeagent.com/v2/bank_accounts/1
                    bank_transaction: https://api.freeagent.com/v2/bank_transactions/8
                    category: https://api.freeagent.com/v2/categories/285
                    dated_on: '2010-05-01'
                    description: harness end-to-end e-business
                    gross_value: '-730.0'
                    project: https://api.freeagent.com/v2/projects/1
                    rebill_factor: '0.25'
                    rebill_type: markup
      responses:
        '200':
          description: ''
  /v2/bank_transaction_explanations/{id}:
    get:
      tags:
        - Bank Transaction Explanations
      summary: Get a single bank transaction explanation
      description: Get a single bank transaction explanation
      operationId: getASingleBankTransactionExplanation
      responses:
        '200':
          description: ''
    delete:
      tags:
        - Bank Transaction Explanations
      summary: Delete a bank transaction explanation
      description: Delete a bank transaction explanation
      operationId: deleteABankTransactionExplanation
      responses:
        '200':
          description: ''
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          example: ''
  /v2/bank_transactions:
    get:
      tags:
        - Bank Transactions
      summary: List all bank transactions under a certain bank account
      description: List all bank transactions under a certain bank account
      operationId: listAllBankTransactionsUnderACertainBankAccount
      parameters:
        - name: bank_account
          in: query
          schema:
            type: string
            example: '{{url}}/v2/bank_accounts/1'
        - name: from_date
          in: query
          schema:
            type: string
            example: '2018-01-01'
        - name: to_date
          in: query
          schema:
            type: string
            example: '2018-01-01'
        - name: updated_since
          in: query
          schema:
            type: string
            example: '2018-01-01'
        - name: view
          in: query
          schema:
            type: string
            example: all
        - name: last_uploaded
          in: query
          schema:
            type: string
            example: 'true'
      responses:
        '200':
          description: ''
  /v2/bank_transactions/{id}:
    get:
      tags:
        - Bank Transactions
      summary: Get a single bank transaction
      description: Get a single bank transaction
      operationId: getASingleBankTransaction
      responses:
        '200':
          description: ''
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          example: ''
  /v2/bank_transactions/statement:
    post:
      tags:
        - Bank Transactions
      summary: Upload a bank statement
      description: Upload a bank statement
      operationId: uploadABankStatement
      parameters:
        - name: bank_account
          in: query
          schema:
            type: string
            example: '{{url}}/v2/bank_accounts/:id'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                statement:
                  type: array
                  items:
                    type: object
                    properties:
                      amount:
                        type: number
                        example: -100
                      dated_on:
                        type: string
                        example: '2019-07-01'
                      description:
                        type: string
                        example: Local Council
                  example:
                    - amount: -100
                      dated_on: '2019-07-01'
                      description: Local Council
                    - amount: 3560
                      dated_on: '2019-07-05'
                      description: Sales
            examples:
              Upload a bank statement:
                value:
                  statement:
                    - amount: -100
                      dated_on: '2019-07-01'
                      description: Local Council
                    - amount: 3560
                      dated_on: '2019-07-05'
                      description: Sales
      responses:
        '200':
          description: ''
  /v2/bills:
    get:
      tags:
        - Bills
      summary: List Bills
      description: List Bills
      operationId: listBills
      parameters:
        - name: view
          in: query
          schema:
            type: string
            example: all
        - name: from_date
          in: query
          schema:
            type: string
            example: '2018-01-01'
        - name: to_date
          in: query
          schema:
            type: string
            example: '2018-01-01'
        - name: updated_since
          in: query
          schema:
            type: string
            example: '2018-01-01'
        - name: contact
          in: query
          schema:
            type: string
            example: '{{url}}/v2/contacts/:id'
        - name: project
          in: query
          schema:
            type: string
            example: '{{url}}/v2/projects/:id'
      responses:
        '200':
          description: ''
    post:
      tags:
        - Bills
      summary: Create Bill
      description: Create Bill
      operationId: createBill
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                bill:
                  type: object
                  properties:
                    attachment:
                      type: object
                      properties:
                        content_type:
                          type: string
                          example: image/png
                        data:
                          type: string
                          example: >-
                            
                        description:
                          type: string
                          example: photo of the receipt
                        file_name:
                          type: string
                          example: receipt.png
                    category:
                      type: string
                      example: '{{url}}/categories/285'
                    contact:
                      type: string
                      example: '{{url}}/contacts/1'
                    dated_on:
                      type: string
                      example: '2015-10-17'
                    due_on:
                      type: string
                      example: '2015-11-17'
                    reference:
                      type: string
                      example: Bill ref 01
                    sale_tax_rate:
                      type: string
                      example: '20'
                    total_value:
                      type: string
                      example: '300'
            examples:
              Create Bill:
                value:
                  bill:
                    category: '{{url}}/categories/285'
                    contact: '{{url}}/contacts/1'
                    dated_on: '2015-10-17'
                    due_on: '2015-11-17'
                    reference: Bill ref 01
                    sale_tax_rate: '20'
                    total_value: '300'
              Create Bill with Attachment:
                value:
                  bill:
                    attachment:
                      content_type: image/png
                      data: >-
                        
                      description: photo of the receipt
                      file_name: receipt.png
                    category: '{{url}}/categories/285'
                    contact: '{{url}}/contacts/1'
                    dated_on: '2015-10-17'
                    due_on: '2015-11-17'
                    reference: Bill ref 01
                    sale_tax_rate: '20'
                    total_value: '300'
      responses:
        '200':
          description: ''
  /v2/bills/{id}:
    get:
      tags:
        - Bills
      summary: Show Bill
      description: Show Bill
      operationId: showBill
      responses:
        '200':
          description: ''
    put:
      tags:
        - Bills
      summary: Update Bill
      description: Update Bill
      operationId: updateBill
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                bill:
                  type: object
                  properties:
                    category:
                      type: string
                      example: '{{url}}/categories/285'
                    contact:
                      type: string
                      example: '{{url}}/contacts/1'
                    dated_on:
                      type: string
                      example: '2015-10-17'
                    due_on:
                      type: string
                      example: '2015-11-17'
                    reference:
                      type: string
                      example: Bill ref 01
                    sale_tax_rate:
                      type: string
                      example: '20'
                    total_value:
                      type: string
                      example: '300'
            examples:
              Update Bill:
                value:
                  bill:
                    category: '{{url}}/categories/285'
                    contact: '{{url}}/contacts/1'
                    dated_on: '2015-10-17'
                    due_on: '2015-11-17'
                    reference: Bill ref 01
                    sale_tax_rate: '20'
                    total_value: '300'
      responses:
        '200':
          description: ''
    delete:
      tags:
        - Bills
      summary: Delete Bill
      description: Delete Bill
      operationId: deleteBill
      responses:
        '200':
          description: ''
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          example: ''
  /v2/capital_assets:
    get:
      tags:
        - Capital Assets
      summary: List all capital assets
      description: List all capital assets
      operationId: listAllCapitalAssets
      responses:
        '200':
          description: ''
  /v2/cashflow:
    get:
      tags:
        - Cashflow
      summary: Cashflow summary for a given date range
      description: Cashflow summary for a given date range
      operationId: cashflowSummaryForAGivenDateRange
      parameters:
        - name: from_date
          in: query
          schema:
            type: string
            example: 01-07-2019
        - name: to_date
          in: query
          schema:
            type: string
            example: 30-09-2019
      responses:
        '200':
          description: ''
  /v2/categories:
    get:
      tags:
        - Categories
      summary: List Categories
      description: List Categories
      operationId: listCategories
      responses:
        '200':
          description: ''
  /v2/categories/{nominal_code}:
    get:
      tags:
        - Categories
      summary: Get a single category
      description: Get a single category
      operationId: getASingleCategory
      responses:
        '200':
          description: ''
    parameters:
      - name: nominal_code
        in: path
        required: true
        schema:
          type: string
          example: '001'
  /v2/cis_bands:
    get:
      tags:
        - CIS Bands
      summary: List all CIS bands for a company
      description: List all CIS bands for a company
      operationId: listAllCisBandsForACompany
      responses:
        '200':
          description: ''
  /v2/company:
    get:
      tags:
        - Company
      summary: Company Details
      description: Company Details
      operationId: companyDetails
      responses:
        '200':
          description: ''
  /v2/company/business_categories:
    get:
      tags:
        - Company
      summary: List business categories
      description: List business categories
      operationId: listBusinessCategories
      responses:
        '200':
          description: ''
  /v2/company/tax_timeline:
    get:
      tags:
        - Company
      summary: Show Tax Timeline
      description: Show Tax Timeline
      operationId: showTaxTimeline
      responses:
        '200':
          description: ''
  /v2/contacts:
    get:
      tags:
        - Contacts
      summary: List Contacts
      description: List Contacts
      operationId: listContacts
      responses:
        '200':
          description: ''
    post:
      tags:
        - Contacts
      summary: Create Contact
      description: Create Contact
      operationId: createContact
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                contact:
                  type: object
                  properties:
                    email:
                      type: string
                      example: fred@testingtonandsons.example.com
                    first_name:
                      type: string
                      example: Frederick
                    last_name:
                      type: string
                      example: Testington
            examples:
              Create Contact:
                value:
                  contact:
                    email: fred@testingtonandsons.example.com
                    first_name: Frederick
                    last_name: Testington
      responses:
        '200':
          description: ''
  /v2/contacts/{id}:
    get:
      tags:
        - Contacts
      summary: Show Contact
      description: Show Contact
      operationId: showContact
      responses:
        '200':
          description: ''
    put:
      tags:
        - Contacts
      summary: Update Contact
      description: Update Contact
      operationId: updateContact
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                contact:
                  type: object
                  properties:
                    country:
                      type: string
                      example: France
            examples:
              Update Contact:
                value:
                  contact:
                    country: France
      responses:
        '200':
          description: ''
    delete:
      tags:
        - Contacts
      summary: Delete Contact
      description: Delete Contact
      operationId: deleteContact
      responses:
        '200':
          description: ''
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          example: ''
  /v2/credit_notes/{id}/transitions/mark_as_sent:
    put:
      tags:
        - Credit Notes
        - Credit Note Transitions
      summary: Mark Credit Note as sent
      description: Mark Credit Note as sent
      operationId: markCreditNoteAsSent
      responses:
        '200':
          description: ''
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          example: '46'
  /v2/credit_notes/{id}/transitions/mark_as_cancelled:
    put:
      tags:
        - Credit Notes
        - Credit Note Transitions
      summary: Mark Credit Note as cancelled
      description: Mark Credit Note as cancelled
      operationId: markCreditNoteAsCancelled
      responses:
        '200':
          description: ''
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          example: '46'
  /v2/credit_notes/{id}/transitions/mark_as_draft:
    put:
      tags:
        - Credit Notes
        - Credit Note Transitions
      summary: Mark Credit Notes as draft
      description: Mark Credit Notes as draft
      operationId: markCreditNotesAsDraft
      responses:
        '200':
          description: ''
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          example: '46'
  /v2/credit_notes:
    get:
      tags:
        - Credit Notes
      summary: List Credit Notes
      description: List Credit Notes
      operationId: listCreditNotes
      parameters:
        - name: contact
          in: query
          schema:
            type: string
            example: '{{url}}/v2/contacts/:id'
        - name: project
          in: query
          schema:
            type: string
            example: '{{url}}/v2/projects/:id'
        - name: currency
          in: query
          schema:
            type: string
            example: USD
        - name: view
          in: query
          schema:
            type: string
            example: all
        - name: updated_since
          in: query
          schema:
            type: string
            example: '2018-01-01'
        - name: sort
          in: query
          schema:
            type: string
            example: updated_at
        - name: nested_credit_note_items
          in: query
          schema:
            type: string
            example: 'true'
      responses:
        '200':
          description: ''
    post:
      tags:
        - Credit Notes
      summary: Create Credit Note
      description: Create Credit Note
      operationId: createCreditNote
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                credit_note:
                  type: object
                  properties:
                    always_show_bic_and_iban:
                      type: boolean
                      example: true
                    contact:
                      type: string
                      example: '{{url}}/v2/contacts/43'
                    credit_note_items:
                      type: array
                      items:
                        type: object
                        properties:
                          description:
                            type: string
                            example: Credit Note Item 1
                          price:
                            type: number
                            example: -100
                          quantity:
                            type: number
                            example: 3
                      example:
                        - description: Credit Note Item 1
                          price: -100
                          quantity: 3
                    currency:
                      type: string
                      example: GBP
                    dated_on:
                      type: string
                      example: '2020-02-01'
                    due_on:
                      type: string
                      example: '2019-09-18'
                    omit_header:
                      type: boolean
                      example: false
                    payment_terms_in_days:
                      type: number
                      example: 30
            examples:
              Create Credit Note:
                value:
                  credit_note:
                    always_show_bic_and_iban: true
                    contact: '{{url}}/v2/contacts/43'
                    credit_note_items:
                      - description: Credit Note Item 1
                        price: -100
                        quantity: 3
                    currency: GBP
                    dated_on: '2020-02-01'
                    due_on: '2019-09-18'
                    omit_header: false
                    payment_terms_in_days: 30
      responses:
        '200':
          description: ''
  /v2/credit_notes/{id}:
    get:
      tags:
        - Credit Notes
      summary: Show Credit Note
      description: Show Credit Note
      operationId: showCreditNote
      responses:
        '200':
          description: ''
    put:
      tags:
        - Credit Notes
      summary: Update Credit Note
      description: Update Credit Note
      operationId: updateCreditNote
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                credit_note:
                  type: object
                  properties:
                    comments:
                      type: string
                      example: An example of some additional text.
                    credit_note_items:
                      type: array
                      items:
                        type: object
                        properties:
                          description:
                            type: string
                            example: New invoice item
                      example:
                        - description: New invoice item
            examples:
              Update Credit Note:
                value:
                  credit_note:
                    comments: An example of some additional text.
                    credit_note_items:
                      - description: New invoice item
      responses:
        '200':
          description: ''
    delete:
      tags:
        - Credit Notes
      summary: Delete Credit Notes
      description: Delete Credit Notes
      operationId: deleteCreditNotes
      responses:
        '200':
          description: ''
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          example: '44'
  /v2/credit_notes/{id}/pdf:
    get:
      tags:
        - Credit Notes
      summary: Show Credit Note as PDF
      description: Show Credit Note as PDF
      operationId: showCreditNoteAsPdf
      responses:
        '200':
          description: ''
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          example: ''
  /v2/credit_notes/{id}/send_email:
    post:
      tags:
        - Credit Notes
      summary: Send Credit Note Email
      description: Send Credit Note Email
      operationId: sendCreditNoteEmail
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                credit_note:
                  type: object
                  properties:
                    email:
                      type: object
                      properties:
                        body:
                          type: string
                          example: Bison bison bison bison bison Bison bison
                        from:
                          type: string
                          example: Our Company <us@company.com>
                        subject:
                          type: string
                          example: Testing
                        to:
                          type: string
                          example: Test Contact <test_contact@example.com>
            examples:
              Send Credit Note Email:
                value:
                  credit_note:
                    email:
                      body: Bison bison bison bison bison Bison bison
                      from: Our Company <us@company.com>
                      subject: Testing
                      to: Test Contact <test_contact@example.com>
      responses:
        '200':
          description: ''
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          example: '46'
  /v2/email_addresses:
    get:
      tags:
        - Email Addresses
      summary: Get a list of verified sender email addresses
      description: Get a list of verified sender email addresses
      operationId: getAListOfVerifiedSenderEmailAddresses
      responses:
        '200':
          description: ''
  /v2/estimates/{id}/transitions/mark_as_sent:
    put:
      tags:
        - Estimates
        - Estimate Transitions
      summary: Mark estimate as sent
      description: Mark estimate as sent
      operationId: markEstimateAsSent
      responses:
        '200':
          description: ''
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          example: ''
  /v2/estimates/{id}/transitions/mark_as_draft:
    put:
      tags:
        - Estimates
        - Estimate Transitions
      summary: Mark estimate as draft
      description: Mark estimate as draft
      operationId: markEstimateAsDraft
      responses:
        '200':
          description: ''
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          example: ''
  /v2/estimates/{id}/transitions/mark_as_approved:
    put:
      tags:
        - Estimates
        - Estimate Transitions
      summary: Mark estimate as approved
      description: Mark estimate as approved
      operationId: markEstimateAsApproved
      responses:
        '200':
          description: ''
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          example: ''
  /v2/estimates/{id}/transitions/mark_as_rejected:
    put:
      tags:
        - Estimates
        - Estimate Transitions
      summary: Mark estimate as rejected
      description: Mark estimate as rejected
      operationId: markEstimateAsRejected
      responses:
        '200':
          description: ''
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          example: ''
  /v2/estimate_items:
    post:
      tags:
        - Estimates
        - Estimates Items
      summary: Create Estimate Item
      description: Create Estimate Item
      operationId: createEstimateItem
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                estimate:
                  type: string
                  example: '{{url}}/v2/estimates/:id'
                estimate_item:
                  type: object
                  properties:
                    category:
                      type: string
                      example: https://api.freeagent.com/v2/categories/001
                    created_at:
                      type: string
                      example: '2011-09-15T10:30:22Z'
                    description:
                      type: string
                      example: sada
                    item_type:
                      type: string
                      example: Hours
                    position:
                      type: string
                      example: '1'
                    price:
                      type: string
                      example: '12.2'
                    quantity:
                      type: string
                      example: '1.03333333'
                    sales_tax_value:
                      type: string
                      example: '20.0'
                    updated_at:
                      type: string
                      example: '2011-09-15T10:30:22Z'
            examples:
              Create Estimate Item:
                value:
                  estimate: '{{url}}/v2/estimates/:id'
                  estimate_item:
                    category: https://api.freeagent.com/v2/categories/001
                    created_at: '2011-09-15T10:30:22Z'
                    description: sada
                    item_type: Hours
                    position: '1'
                    price: '12.2'
                    quantity: '1.03333333'
                    sales_tax_value: '20.0'
                    updated_at: '2011-09-15T10:30:22Z'
      responses:
        '200':
          description: ''
  /v2/estimate_items/{id}:
    put:
      tags:
        - Estimates
        - Estimates Items
      summary: Update Estimate Item
      description: Update Estimate Item
      operationId: updateEstimateItem
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                estimate_item:
                  type: object
                  properties:
                    category:
                      type: string
                      example: https://api.freeagent.com/v2/categories/001
                    created_at:
                      type: string
                      example: '2011-09-15T10:30:22Z'
                    description:
                      type: string
                      example: sada
                    item_type:
                      type: string
                      example: Hours
                    position:
                      type: string
                      example: '1'
                    price:
                      type: string
                      example: '12.2'
                    quantity:
                      type: string
                      example: '1.03333333'
                    sales_tax_value:
                      type: string
                      example: '20.0'
                    updated_at:
                      type: string
                      example: '2011-09-15T10:30:22Z'
                    url:
                      type: string
                      example: https://api.freeagent.com/v2/estimate_items/2
            examples:
              Update Estimate Item:
                value:
                  estimate_item:
                    category: https://api.freeagent.com/v2/categories/001
                    created_at: '2011-09-15T10:30:22Z'
                    description: sada
                    item_type: Hours
                    position: '1'
                    price: '12.2'
                    quantity: '1.03333333'
                    sales_tax_value: '20.0'
                    updated_at: '2011-09-15T10:30:22Z'
                    url: https://api.freeagent.com/v2/estimate_items/2
      responses:
        '200':
          description: ''
    delete:
      tags:
        - Estimates
        - Estimates Items
      summary: Delete Estimate Item
      description: Delete Estimate Item
      operationId: deleteEstimateItem
      responses:
        '200':
          description: ''
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          example: ''
  /v2/estimates:
    get:
      tags:
        - Estimates
      summary: List Estimates
      description: List Estimates
      operationId: listEstimates
      parameters:
        - name: view
          in: query
          schema:
            type: string
            example: all
        - name: from_date
          in: query
          schema:
            type: string
            example: '2018-01-01'
        - name: to_date
          in: query
          schema:
            type: string
            example: '2018-01-01'
        - name: updated_since
          in: query
          schema:
            type: string
            example: '2018-01-01'
        - name: nested_estimate_items
          in: query
          schema:
            type: string
            example: 'true'
        - name: contact
          in: query
          schema:
            type: string
            example: '{{url}}/v2/contacts/2'
        - name: project
          in: query
          schema:
            type: string
            example: '{{url}}/v2/projects/2'
        - name: invoice
          in: query
          schema:
            type: string
            example: '{{url}}/v2/invoices/2'
      responses:
        '200':
          description: ''
    post:
      tags:
        - Estimates
      summary: Create Estimate
      description: Create Estimate
      operationId: createEstimate
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                estimate:
                  type: object
                  properties:
                    contact:
                      type: string
                      example: '{{url}}contacts/:id'
                    currency:
                      type: string
                      example: GBP
                    dated_on:
                      type: string
                      example: '2015-08-18'
                    due_on:
                      type: string
                      example: '2015-09-18'
                    estimate_type:
                      type: string
                      example: Estimate
                    status:
                      type: string
                      example: Draft
            examples:
              Create Estimate:
                value:
                  estimate:
                    contact: '{{url}}contacts/:id'
                    currency: GBP
                    dated_on: '2015-08-18'
                    due_on: '2015-09-18'
                    estimate_type: Estimate
                    status: Draft
      responses:
        '200':
          description: ''
  /v2/estimates/{id}:
    get:
      tags:
        - Estimates
      summary: Show Estimate
      description: Show Estimate
      operationId: showEstimate
      responses:
        '200':
          description: ''
    put:
      tags:
        - Estimates
      summary: Update Estimate
      description: Update Estimate
      operationId: updateEstimate
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                estimate:
                  type: object
                  properties:
                    notes:
                      type: string
                      example: An example of some additional text.
            examples:
              Update Estimate:
                value:
                  estimate:
                    notes: An example of some additional text.
      responses:
        '200':
          description: ''
    delete:
      tags:
        - Estimates
      summary: Delete Estimate
      description: Delete Estimate
      operationId: deleteEstimate
      responses:
        '200':
          description: ''
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          example: ''
  /v2/estimates/{id}/pdf:
    get:
      tags:
        - Estimates
      summary: Show Estimate as PDF
      description: Show Estimate as PDF
      operationId: showEstimateAsPdf
      responses:
        '200':
          description: ''
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          example: ''
  /v2/expenses:
    get:
      tags:
        - Expenses
      summary: List all expenses
      description: List all expenses
      operationId: listAllExpenses
      responses:
        '200':
          description: ''
    post:
      tags:
        - Expenses
      summary: Create expense
      description: Create expense
      operationId: createExpense
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                expenses:
                  type: array
                  items:
                    type: object
                    properties:
                      category:
                        type: string
                        example: https://api.freeagent.com/v2/categories/285
                      created_at:
                        type: string
                        example: '2011-08-24T08:10:40Z'
                      dated_on:
                        type: string
                        example: '2011-08-24'
                      description:
                        type: string
                        example: Some description
                      gross_value:
                        type: string
                        example: '-12.0'
                      manual_sales_tax_amount:
                        type: string
                        example: '0.12'
                      sales_tax_rate:
                        type: string
                        example: '20.0'
                      updated_at:
                        type: string
                        example: '2011-08-24T08:10:40Z'
                      user:
                        type: string
                        example: '{{url}}/v2/users/1'
                  example:
                    - category: https://api.freeagent.com/v2/categories/285
                      created_at: '2011-08-24T08:10:40Z'
                      dated_on: '2011-08-24'
                      description: Some description
                      gross_value: '-12.0'
                      manual_sales_tax_amount: '0.12'
                      sales_tax_rate: '20.0'
                      updated_at: '2011-08-24T08:10:40Z'
                      user: '{{url}}/v2/users/1'
                    - category: https://api.freeagent.com/v2/categories/285
                      created_at: '2011-08-25T08:10:40Z'
                      dated_on: '2011-08-24'
                      description: Some description
                      gross_value: '-5.0'
                      manual_sales_tax_amount: '0.12'
                      sales_tax_rate: '20.0'
                      updated_at: '2011-08-25T08:10:40Z'
                      user: '{{url}}/v2/users/1'
            examples:
              Batch create expenses:
                value:
                  expenses:
                    - category: https://api.freeagent.com/v2/categories/285
                      created_at: '2011-08-24T08:10:40Z'
                      dated_on: '2011-08-24'
                      description: Some description
                      gross_value: '-12.0'
                      manual_sales_tax_amount: '0.12'
                      sales_tax_rate: '20.0'
                      updated_at: '2011-08-24T08:10:40Z'
                      user: '{{url}}/v2/users/1'
                    - category: https://api.freeagent.com/v2/categories/285
                      created_at: '2011-08-25T08:10:40Z'
                      dated_on: '2011-08-24'
                      description: Some description
                      gross_value: '-5.0'
                      manual_sales_tax_amount: '0.12'
                      sales_tax_rate: '20.0'
                      updated_at: '2011-08-25T08:10:40Z'
                      user: '{{url}}/v2/users/1'
              Create expense:
                value:
                  expense:
                    category: https://api.freeagent.com/v2/categories/285
                    created_at: '2011-08-24T08:10:40Z'
                    currency: USD
                    dated_on: '2011-08-24'
                    description: Some description
                    gross_value: '-20.0'
                    manual_sales_tax_amount: '0.12'
                    native_gross_value: '-12.0'
                    native_sales_tax_value: '-0.12'
                    sales_tax_rate: '1.0'
                    sales_tax_value: '-0.2'
                    updated_at: '2011-08-24T08:10:40Z'
                    user: '{{url}}/v2/users/:id'
      responses:
        '200':
          description: ''
  /v2/expenses/{id}:
    get:
      tags:
        - Expenses
      summary: Get a single expense
      description: Get a single expense
      operationId: getASingleExpense
      responses:
        '200':
          description: ''
    delete:
      tags:
        - Expenses
      summary: Delete expense
      description: Delete expense
      operationId: deleteExpense
      responses:
        '200':
          description: ''
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          example: ''
  /v2/expenses/mileage_settings:
    get:
      tags:
        - Expenses
      summary: Get mileage settings
      description: Get mileage settings
      operationId: getMileageSettings
      responses:
        '200':
          description: ''
  /v2/invoices/{id}/transitions/mark_as_sent:
    put:
      tags:
        - Invoices
        - Invoice Transitions
      summary: Mark invoice as sent
      description: Mark invoice as sent
      operationId: markInvoiceAsSent
      responses:
        '200':
          description: ''
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          example: ''
  /v2/invoices/{id}/transitions/mark_as_cancelled:
    put:
      tags:
        - Invoices
        - Invoice Transitions
      summary: Mark invoice as cancelled
      description: Mark invoice as cancelled
      operationId: markInvoiceAsCancelled
      responses:
        '200':
          description: ''
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          example: ''
  /v2/invoices/{id}/transitions/mark_as_scheduled:
    put:
      tags:
        - Invoices
        - Invoice Transitions
      summary: Mark invoice as scheduled
      description: Mark invoice as scheduled
      operationId: markInvoiceAsScheduled
      responses:
        '200':
          description: ''
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          example: ''
  /v2/invoices/{id}/transitions/mark_as_draft:
    put:
      tags:
        - Invoices
        - Invoice Transitions
      summary: Mark invoice as draft
      description: Mark invoice as draft
      operationId: markInvoiceAsDraft
      responses:
        '200':
          description: ''
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          example: ''
  /v2/invoices:
    get:
      tags:
        - Invoices
      summary: List Invoices
      description: List Invoices
      operationId: listInvoices
      parameters:
        - name: nested_invoice_items
          in: query
          schema:
            type: string
            example: 'true'
        - name: contact
          in: query
          schema:
            type: string
            example: '{{url}}/v2/contacts/:id'
        - name: project
          in: query
          schema:
            type: string
            example: '{{url}}/v2/projects/:id'
        - name: currency
          in: query
          schema:
            type: string
            example: USD
        - name: view
          in: query
          schema:
            type: string
            example: all
        - name: updated_since
          in: query
          schema:
            type: string
            example: '2018-01-01'
        - name: sort
          in: query
          schema:
            type: string
            example: updated_at
      responses:
        '200':
          description: ''
    post:
      tags:
        - Invoices
      summary: Create Invoice
      description: Create Invoice
      operationId: createInvoice
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                invoice:
                  type: object
                  properties:
                    always_show_bic_and_iban:
                      type: boolean
                      example: false
                    contact:
                      type: string
                      example: '{{url}}/v2/contacts/9592766'
                    currency:
                      type: string
                      example: GBP
                    dated_on:
                      type: string
                      example: '2020-07-25'
                    due_on:
                      type: string
                      example: '2019-09-18'
                    invoice_items:
                      type: array
                      items:
                        type: object
                        properties:
                          category:
                            type: string
                            example: https://api.freeagent.com/v2/categories/001
                          description:
                            type: string
                            example: Blah blah
                          price:
                            type: number
                            example: 595
                          quantity:
                            type: number
                            example: 1
                      example:
                        - category: https://api.freeagent.com/v2/categories/001
                          description: Blah blah
                          price: 595
                          quantity: 1
                    omit_header:
                      type: boolean
                      example: false
                    payment_terms_in_days:
                      type: number
                      example: 30
                    reference:
                      type: string
                      example: 12ss3
            examples:
              Create Invoice:
                value:
                  invoice:
                    always_show_bic_and_iban: false
                    contact: '{{url}}/v2/contacts/9592766'
                    currency: GBP
                    dated_on: '2020-07-25'
                    due_on: '2019-09-18'
                    invoice_items:
                      - category: https://api.freeagent.com/v2/categories/001
                        description: Blah blah
                        price: 595
                        quantity: 1
                    omit_header: false
                    payment_terms_in_days: 30
                    reference: 12ss3
      responses:
        '200':
          description: ''
  /v2/invoices/{id}:
    get:
      tags:
        - Invoices
      summary: Show Invoice
      description: Show Invoice
      operationId: showInvoice
      responses:
        '200':
          description: ''
    put:
      tags:
        - Invoices
      summary: Update Invoice
      description: Update Invoice
      operationId: updateInvoice
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                invoice:
                  type: object
                  properties:
                    notes:
                      type: string
                      example: An example of some additional text.
            examples:
              Update Invoice:
                value:
                  invoice:
                    notes: An example of some additional text.
      responses:
        '200':
          description: ''
    delete:
      tags:
        - Invoices
      summary: Delete Invoice
      description: Delete Invoice
      operationId: deleteInvoice
      responses:
        '200':
          description: ''
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          example: ''
  /v2/invoices/timeline:
    get:
      tags:
        - Invoices
      summary: Get invoice timeline
      description: Get invoice timeline
      operationId: getInvoiceTimeline
      responses:
        '200':
          description: ''
  /v2/invoices/{id}/pdf:
    get:
      tags:
        - Invoices
      summary: Show Invoice as PDF
      description: Show Invoice as PDF
      operationId: showInvoiceAsPdf
      responses:
        '200':
          description: ''
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          example: ''
  /v2/invoices/{id}/send_email:
    post:
      tags:
        - Invoices
      summary: Send Invoice Email
      description: Send Invoice Email
      operationId: sendInvoiceEmail
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                invoice:
                  type: object
                  properties:
                    email:
                      type: object
                      properties:
                        body:
                          type: string
                          example: Bison bison bison bison bison Bison bison
                        from:
                          type: string
                          example: Our Company <us@company.com>
                        subject:
                          type: string
                          example: Testing
                        to:
                          type: string
                          example: Test Contact <test_contact@example.com>
            examples:
              Send Invoice Email:
                value:
                  invoice:
                    email:
                      body: Bison bison bison bison bison Bison bison
                      from: Our Company <us@company.com>
                      subject: Testing
                      to: Test Contact <test_contact@example.com>
      responses:
        '200':
          description: ''
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          example: ''
  /v2/invoices/{id}/direct_debit:
    post:
      tags:
        - Invoices
      summary: Take Payment using GoCardless Direct Debit Mandate
      description: >-
        Only available for invoices which fit the following criteria:


        - The invoice must be sent

        - The invoice must have gocardless_preauth available and enabled as a
        payment method

        - The invoice must not have already had a payment taken for it
      operationId: takePaymentUsingGocardlessDirectDebitMandate
      requestBody:
        content:
          text/plain:
            examples:
              Take Payment using GoCardless Direct Debit Mandate:
                value: ''
      responses:
        '200':
          description: ''
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          example: ''
  /v2/invoice_items:
    post:
      tags:
        - Invoices
      summary: Create Invoice Item
      description: Create Invoice Item
      operationId: createInvoiceItem
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                invoice:
                  type: string
                  example: https://api.freeagent.com/v2/invoices/1
                invoice_item:
                  type: object
                  properties:
                    description:
                      type: string
                      example: Fishing trip
                    item_type:
                      type: string
                      example: Hours
                    price:
                      type: number
                      example: 35
                    quantity:
                      type: number
                      example: 6
            examples:
              Create Invoice Item:
                value:
                  invoice: https://api.freeagent.com/v2/invoices/1
                  invoice_item:
                    description: Fishing trip
                    item_type: Hours
                    price: 35
                    quantity: 6
      responses:
        '200':
          description: ''
  /v2/journal_sets:
    get:
      tags:
        - Journal Sets
      summary: List all journal sets
      description: List all journal sets
      operationId: listAllJournalSets
      parameters:
        - name: to_date
          in: query
          schema:
            type: string
            example: '2018-01-01'
        - name: from_date
          in: query
          schema:
            type: string
            example: '2018-01-01'
        - name: tag
          in: query
          schema:
            type: string
            example: MYAPPTAG
      responses:
        '200':
          description: ''
    put:
      tags:
        - Journal Sets
      summary: Update a journal set
      description: Update a journal set
      operationId: updateAJournalSet
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                journal_set:
                  type: object
                  properties:
                    dated_on:
                      type: string
                      example: '2011-07-28'
                    description:
                      type: string
                      example: An example journal set
                    journal_entries:
                      type: array
                      items:
                        type: object
                        properties:
                          category:
                            type: string
                            example: https://api.freeagent.com/v2/categories/001
                          debit_value:
                            type: string
                            example: '-123.45'
                          description:
                            type: string
                            example: A Sales Correction
                          url:
                            type: string
                            example: https://api.freeagent.com/v2/journal_entries/1
                          user:
                            type: string
                            example: https://api.freeagent.com/v2/users/1
                      example:
                        - category: https://api.freeagent.com/v2/categories/001
                          debit_value: '-123.45'
                          description: A Sales Correction
                          url: https://api.freeagent.com/v2/journal_entries/1
                        - category: https://api.freeagent.com/v2/categories/901
                          debit_value: '123.45'
                          description: Director's Capital Introduced
                          url: https://api.freeagent.com/v2/journal_entries/2
                          user: https://api.freeagent.com/v2/users/1
                    tag:
                      type: string
                      example: MYAPPTAG
                    url:
                      type: string
                      example: https://api.freeagent.com/v2/journal_sets/1
            examples:
              Update a journal set:
                value:
                  journal_set:
                    dated_on: '2011-07-28'
                    description: An example journal set
                    journal_entries:
                      - category: https://api.freeagent.com/v2/categories/001
                        debit_value: '-123.45'
                        description: A Sales Correction
                        url: https://api.freeagent.com/v2/journal_entries/1
                      - category: https://api.freeagent.com/v2/categories/901
                        debit_value: '123.45'
                        description: Director's Capital Introduced
                        url: https://api.freeagent.com/v2/journal_entries/2
                        user: https://api.freeagent.com/v2/users/1
                    tag: MYAPPTAG
                    url: https://api.freeagent.com/v2/journal_sets/1
      responses:
        '200':
          description: ''
    post:
      tags:
        - Journal Sets
      summary: Create a journal set
      description: Create a journal set
      operationId: createAJournalSet
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                journal_set:
                  type: object
                  properties:
                    dated_on:
                      type: string
                      example: '2019-07-28'
                    description:
                      type: string
                      example: An example journal set
                    journal_entries:
                      type: array
                      items:
                        type: object
                        properties:
                          category:
                            type: string
                            example: https://api.freeagent.com/v2/categories/001
                          debit_value:
                            type: string
                            example: '-123.45'
                          description:
                            type: string
                            example: A Sales Correction
                          user:
                            type: string
                            example: https://api.freeagent.com/v2/users/1
                      example:
                        - category: https://api.freeagent.com/v2/categories/001
                          debit_value: '-123.45'
                          description: A Sales Correction
                        - category: https://api.freeagent.com/v2/categories/901
                          debit_value: '123.45'
                          description: Director's Capital Introduced
                          user: https://api.freeagent.com/v2/users/1
                    tag:
                      type: string
                      example: MYAPPTAG
            examples:
              Create a journal set:
                value:
                  journal_set:
                    dated_on: '2019-07-28'
                    description: An example journal set
                    journal_entries:
                      - category: https://api.freeagent.com/v2/categories/001
                        debit_value: '-123.45'
                        description: A Sales Correction
                      - category: https://api.freeagent.com/v2/categories/901
                        debit_value: '123.45'
                        description: Director's Capital Introduced
                        user: https://api.freeagent.com/v2/users/1
                    tag: MYAPPTAG
      responses:
        '200':
          description: ''
  /v2/journal_sets/{id}:
    get:
      tags:
        - Journal Sets
      summary: Get a single journal set
      description: Get a single journal set
      operationId: getASingleJournalSet
      responses:
        '200':
          description: ''
    delete:
      tags:
        - Journal Sets
      summary: Delete a journal set
      description: Delete a journal set
      operationId: deleteAJournalSet
      responses:
        '200':
          description: ''
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          example: ''
  /v2/journal_sets/opening_balances:
    get:
      tags:
        - Journal Sets
      summary: Get the Opening Balances
      description: Get the Opening Balances
      operationId: getTheOpeningBalances
      responses:
        '200':
          description: ''
  /v2/notes:
    get:
      tags:
        - Notes
      summary: List Notes
      description: List Notes
      operationId: listNotes
      parameters:
        - name: contact
          in: query
          schema:
            type: string
            example: '{{url}}/v2/contact/:id'
        - name: project
          in: query
          schema:
            type: string
            example: '{{url}}/v2/project/:id'
      responses:
        '200':
          description: ''
  /v2/notes/{id}:
    get:
      tags:
        - Notes
      summary: Get a single note
      description: Get a single note
      operationId: getASingleNote
      responses:
        '200':
          description: ''
    put:
      tags:
        - Notes
      summary: Update a Note
      description: Update a Note
      operationId: updateANote
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                note:
                  type: object
                  properties:
                    author:
                      type: string
                      example: Development Team
                    created_at:
                      type: string
                      example: '2012-05-30T10:22:34Z'
                    note:
                      type: string
                      example: A new note
                    parent_url:
                      type: string
                      example: https://api.freeagent.com/v2/project/1
                    updated_at:
                      type: string
                      example: '2012-05-30T10:22:34Z'
            examples:
              Update a Note:
                value:
                  note:
                    author: Development Team
                    created_at: '2012-05-30T10:22:34Z'
                    note: A new note
                    parent_url: https://api.freeagent.com/v2/project/1
                    updated_at: '2012-05-30T10:22:34Z'
      responses:
        '200':
          description: ''
    post:
      tags:
        - Notes
      summary: Create a Note
      description: Create a Note
      operationId: createANote
      parameters:
        - name: contact
          in: query
          schema:
            type: string
            example: '{{url}}/v2/contact/:id'
        - name: project
          in: query
          schema:
            type: string
            example: '{{url}}/v2/project/:id'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                note:
                  type: object
                  properties:
                    author:
                      type: string
                      example: Development Team
                    created_at:
                      type: string
                      example: '2012-05-30T10:22:34Z'
                    note:
                      type: string
                      example: A new note
                    parent_url:
                      type: string
                      example: '{{url}}/v2/contact/1'
                    updated_at:
                      type: string
                      example: '2012-05-30T10:22:34Z'
            examples:
              Create a Note:
                value:
                  note:
                    author: Development Team
                    created_at: '2012-05-30T10:22:34Z'
                    note: A new note
                    parent_url: '{{url}}/v2/contact/1'
                    updated_at: '2012-05-30T10:22:34Z'
      responses:
        '200':
          description: ''
    delete:
      tags:
        - Notes
      summary: Delete a note
      description: Delete a note
      operationId: deleteANote
      responses:
        '200':
          description: ''
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          example: ''
  /v2/payroll/{year}:
    get:
      tags:
        - Payroll
      summary: List all periods for a given tax year
      description: List all periods for a given tax year
      operationId: listAllPeriodsForAGivenTaxYear
      responses:
        '200':
          description: ''
    parameters:
      - name: year
        in: path
        required: true
        schema:
          type: string
          example: '2018'
  /v2/payroll/{year}/{period}:
    get:
      tags:
        - Payroll
      summary: List all payslips for a given period
      description: List all payslips for a given period
      operationId: listAllPayslipsForAGivenPeriod
      responses:
        '200':
          description: ''
    parameters:
      - name: year
        in: path
        required: true
        schema:
          type: string
          example: '2018'
      - name: period
        in: path
        required: true
        schema:
          type: string
          example: ''
  /v2/price_list_items:
    get:
      tags:
        - Price List Items
      summary: List all Price List Items
      description: List all Price List Items
      operationId: listAllPriceListItems
      responses:
        '200':
          description: ''
  /v2/price_list_items/{id}:
    get:
      tags:
        - Price List Items
      summary: Get a single Price List Item
      description: Get a single Price List Item
      operationId: getASinglePriceListItem
      responses:
        '200':
          description: ''
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          example: ''
  /v2/accounting/profit_and_loss/summary:
    get:
      tags:
        - Profit & Loss
      summary: Get the P&L summary
      description: Get the P&L summary
      operationId: getThePLSummary
      responses:
        '200':
          description: ''
  /v2/projects:
    get:
      tags:
        - Projects
      summary: List Projects
      description: List Projects
      operationId: listProjects
      parameters:
        - name: contact
          in: query
          schema:
            type: string
            example: '{{url}}/v2/contacts/:id'
      responses:
        '200':
          description: ''
    post:
      tags:
        - Projects
      summary: Create Project
      description: Create Project
      operationId: createProject
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                project:
                  type: object
                  properties:
                    billing_period:
                      type: string
                      example: hour
                    budget:
                      type: number
                      example: 28
                    budget_units:
                      type: string
                      example: Days
                    contact:
                      type: string
                      example: https://api.freeagent.com/v2/contacts/2
                    currency:
                      type: string
                      example: GBP
                    ends_on:
                      type: string
                      example: '2015-12-31'
                    hours_per_day:
                      type: number
                      example: 8
                    is_ir35:
                      type: boolean
                      example: false
                    name:
                      type: string
                      example: Website Redesign
                    normal_billing_rate:
                      type: number
                      example: 500
                    starts_on:
                      type: string
                      example: 2015-10-1
                    status:
                      type: string
                      example: Active
                    uses_project_invoice_sequence:
                      type: boolean
                      example: false
            examples:
              Create Project:
                value:
                  project:
                    billing_period: hour
                    budget: 28
                    budget_units: Days
                    contact: https://api.freeagent.com/v2/contacts/2
                    currency: GBP
                    ends_on: '2015-12-31'
                    hours_per_day: 8
                    is_ir35: false
                    name: Website Redesign
                    normal_billing_rate: 500
                    starts_on: 2015-10-1
                    status: Active
                    uses_project_invoice_sequence: false
      responses:
        '200':
          description: ''
  /v2/projects/{id}:
    get:
      tags:
        - Projects
      summary: Show Project
      description: Show Project
      operationId: showProject
      responses:
        '200':
          description: ''
    delete:
      tags:
        - Projects
      summary: Delete Project
      description: Delete Project
      operationId: deleteProject
      responses:
        '200':
          description: ''
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          example: ''
  /v2/recurring_invoices:
    get:
      tags:
        - Recurring Invoices
      summary: List all recurring invoices
      description: List all recurring invoices
      operationId: listAllRecurringInvoices
      parameters:
        - name: view
          in: query
          schema:
            type: string
            example: draft
        - name: contact
          in: query
          schema:
            type: string
            example: '{{url}}/v2/contacts/:id'
      responses:
        '200':
          description: ''
  /v2/recurring_invoices/{id}:
    get:
      tags:
        - Recurring Invoices
      summary: Show Recurring Invoice
      description: Show Recurring Invoice
      operationId: showRecurringInvoice
      responses:
        '200':
          description: ''
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          example: ''
  /v2/sales_tax_periods:
    get:
      tags:
        - Sales Tax Periods
      summary: List all sales tax periods for a company
      description: Only available to US and Universal companies
      operationId: listAllSalesTaxPeriodsForACompany
      responses:
        '200':
          description: ''
    post:
      tags:
        - Sales Tax Periods
      summary: Create a sales tax period
      description: Only available to US and Universal companies.
      operationId: createASalesTaxPeriod
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                sales_tax_period:
                  type: object
                  properties:
                    effective_date:
                      type: string
                      example: '2016-09-21'
                    sales_tax_is_value_added:
                      type: boolean
                      example: true
                    sales_tax_name:
                      type: string
                      example: First Tax
                    sales_tax_rate_1:
                      type: string
                      example: '2.0'
                    sales_tax_rate_2:
                      type: string
                      example: '3.0'
                    sales_tax_rate_3:
                      type: string
                      example: '4.0'
                    sales_tax_registration_number:
                      type: string
                      example: '12345678'
                    sales_tax_registration_status:
                      type: string
                      example: Registered
                    second_sales_tax_is_compound:
                      type: boolean
                      example: true
                    second_sales_tax_name:
                      type: string
                      example: Second Tax
                    second_sales_tax_rate_1:
                      type: string
                      example: '10.0'
                    second_sales_tax_rate_2:
                      type: string
                      example: '20.0'
                    second_sales_tax_rate_3:
                      type: string
                      example: '50.0'
            examples:
              Create a sales tax period:
                value:
                  sales_tax_period:
                    effective_date: '2016-09-21'
                    sales_tax_is_value_added: true
                    sales_tax_name: First Tax
                    sales_tax_rate_1: '2.0'
                    sales_tax_rate_2: '3.0'
                    sales_tax_rate_3: '4.0'
                    sales_tax_registration_number: '12345678'
                    sales_tax_registration_status: Registered
                    second_sales_tax_is_compound: true
                    second_sales_tax_name: Second Tax
                    second_sales_tax_rate_1: '10.0'
                    second_sales_tax_rate_2: '20.0'
                    second_sales_tax_rate_3: '50.0'
      responses:
        '200':
          description: ''
  /v2/sales_tax_periods/{id}:
    get:
      tags:
        - Sales Tax Periods
      summary: Get a single sales tax period
      description: Only available to US and Universal companies.
      operationId: getASingleSalesTaxPeriod
      responses:
        '200':
          description: ''
    put:
      tags:
        - Sales Tax Periods
      summary: Update a sales tax period
      description: Only available to US and Universal companies.
      operationId: updateASalesTaxPeriod
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                sales_tax_period:
                  type: object
                  properties:
                    effective_date:
                      type: string
                      example: '2016-09-21'
                    sales_tax_is_value_added:
                      type: boolean
                      example: true
                    sales_tax_name:
                      type: string
                      example: First Tax
                    sales_tax_rate_1:
                      type: string
                      example: '2.0'
                    sales_tax_rate_2:
                      type: string
                      example: '3.0'
                    sales_tax_rate_3:
                      type: string
                      example: '4.0'
                    sales_tax_registration_number:
                      type: string
                      example: '12345678'
                    sales_tax_registration_status:
                      type: string
                      example: Registered
                    second_sales_tax_is_compound:
                      type: boolean
                      example: true
                    second_sales_tax_name:
                      type: string
                      example: Second Tax
                    second_sales_tax_rate_1:
                      type: string
                      example: '10.0'
                    second_sales_tax_rate_2:
                      type: string
                      example: '20.0'
                    second_sales_tax_rate_3:
                      type: string
                      example: '50.0'
            examples:
              Update a sales tax period:
                value:
                  sales_tax_period:
                    effective_date: '2016-09-21'
                    sales_tax_is_value_added: true
                    sales_tax_name: First Tax
                    sales_tax_rate_1: '2.0'
                    sales_tax_rate_2: '3.0'
                    sales_tax_rate_3: '4.0'
                    sales_tax_registration_number: '12345678'
                    sales_tax_registration_status: Registered
                    second_sales_tax_is_compound: true
                    second_sales_tax_name: Second Tax
                    second_sales_tax_rate_1: '10.0'
                    second_sales_tax_rate_2: '20.0'
                    second_sales_tax_rate_3: '50.0'
      responses:
        '200':
          description: ''
    delete:
      tags:
        - Sales Tax Periods
      summary: Delete a sales tax period
      description: Only available to US and Universal companies.
      operationId: deleteASalesTaxPeriod
      responses:
        '200':
          description: ''
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          example: ''
  /v2/stock_items:
    get:
      tags:
        - Stock Items
      summary: List all Stock Items
      description: List all Stock Items
      operationId: listAllStockItems
      parameters:
        - name: contact
          in: query
          schema:
            type: string
            example: '{{url}}/v2/contacts/:id'
      responses:
        '200':
          description: ''
  /v2/stock_items/{id}:
    get:
      tags:
        - Stock Items
      summary: Get a single Stock Item
      description: Get a single Stock Item
      operationId: getASingleStockItem
      responses:
        '200':
          description: ''
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          example: ''
  /v2/tasks:
    get:
      tags:
        - Tasks
      summary: List all tasks
      description: List all tasks
      operationId: listAllTasks
      parameters:
        - name: view
          in: query
          schema:
            type: string
            example: all
        - name: updated_since
          in: query
          schema:
            type: string
            example: '2018-01-01'
        - name: project
          in: query
          schema:
            type: string
            example: '{{url}}/v2/projects/:id'
      responses:
        '200':
          description: ''
    post:
      tags:
        - Tasks
      summary: Create a task under a certain project
      description: Create a task under a certain project
      operationId: createATaskUnderACertainProject
      parameters:
        - name: project
          in: query
          schema:
            type: string
            example: '{{url}}/v2/projects/:id'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                task:
                  type: object
                  properties:
                    billing_period:
                      type: string
                      example: hour
                    billing_rate:
                      type: string
                      example: '0.0'
                    is_billable:
                      type: boolean
                      example: true
                    name:
                      type: string
                      example: Sample Task
                    status:
                      type: string
                      example: Active
            examples:
              Create a task under a certain project:
                value:
                  task:
                    billing_period: hour
                    billing_rate: '0.0'
                    is_billable: true
                    name: Sample Task
                    status: Active
      responses:
        '200':
          description: ''
  /v2/tasks/{id}:
    get:
      tags:
        - Tasks
      summary: Get a single task
      description: Get a single task
      operationId: getASingleTask
      responses:
        '200':
          description: ''
    put:
      tags:
        - Tasks
      summary: Update a task
      description: Update a task
      operationId: updateATask
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                task:
                  type: object
                  properties:
                    billing_period:
                      type: string
                      example: hour
                    billing_rate:
                      type: string
                      example: '0.0'
                    is_billable:
                      type: boolean
                      example: true
                    name:
                      type: string
                      example: Sample Task
                    status:
                      type: string
                      example: Active
            examples:
              Update a task:
                value:
                  task:
                    billing_period: hour
                    billing_rate: '0.0'
                    is_billable: true
                    name: Sample Task
                    status: Active
      responses:
        '200':
          description: ''
    delete:
      tags:
        - Tasks
      summary: Delete Task
      description: Delete Task
      operationId: deleteTask
      responses:
        '200':
          description: ''
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          example: ''
  /v2/timeslips/{id}/timer:
    post:
      tags:
        - Timeslips
        - Timers
      summary: Start a Timer
      description: Start a Timer
      operationId: startATimer
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                timeslip:
                  type: object
                  properties:
                    created_at:
                      type: string
                      example: '2011-08-16T13:32:00Z'
                    dated_on:
                      type: string
                      example: '2011-08-15'
                    hours:
                      type: string
                      example: '12.0'
                    project:
                      type: string
                      example: '{{url}}/v2/projects/1'
                    task:
                      type: string
                      example: '{{url}}/v2/tasks/1'
                    updated_at:
                      type: string
                      example: '2011-08-16T13:32:00Z'
                    user:
                      type: string
                      example: '{{url}}/v2/users/1'
            examples:
              Start a Timer:
                value:
                  timeslip:
                    created_at: '2011-08-16T13:32:00Z'
                    dated_on: '2011-08-15'
                    hours: '12.0'
                    project: '{{url}}/v2/projects/1'
                    task: '{{url}}/v2/tasks/1'
                    updated_at: '2011-08-16T13:32:00Z'
                    user: '{{url}}/v2/users/1'
      responses:
        '200':
          description: ''
    delete:
      tags:
        - Timeslips
        - Timers
      summary: Stop a Timer
      description: Stop a Timer
      operationId: stopATimer
      responses:
        '200':
          description: ''
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          example: ''
  /v2/timeslips:
    get:
      tags:
        - Timeslips
      summary: List all timeslips
      description: List all timeslips
      operationId: listAllTimeslips
      parameters:
        - name: view
          in: query
          schema:
            type: string
            example: all
        - name: from_date
          in: query
          schema:
            type: string
            example: '2018-01-01'
        - name: to_date
          in: query
          schema:
            type: string
            example: '2018-01-01'
        - name: updated_since
          in: query
          schema:
            type: string
            example: '2018-01-01'
        - name: user
          in: query
          schema:
            type: string
            example: '{{url}}/v2/users/:id'
        - name: task
          in: query
          schema:
            type: string
            example: '{{url}}/v2/tasks/:id'
        - name: project
          in: query
          schema:
            type: string
            example: '{{url}}/v2/projects/:id'
      responses:
        '200':
          description: ''
    post:
      tags:
        - Timeslips
      summary: Create a timeslip
      description: Create a timeslip
      operationId: createATimeslip
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                timeslip:
                  type: object
                  properties:
                    created_at:
                      type: string
                      example: '2011-08-16T13:32:00Z'
                    dated_on:
                      type: string
                      example: '2011-08-15'
                    hours:
                      type: string
                      example: '12.0'
                    project:
                      type: string
                      example: '{{url}}/v2/projects/1'
                    task:
                      type: string
                      example: '{{url}}/v2/tasks/1'
                    updated_at:
                      type: string
                      example: '2011-08-16T13:32:00Z'
                    user:
                      type: string
                      example: '{{url}}/v2/users/1'
            examples:
              Create a timeslip:
                value:
                  timeslip:
                    created_at: '2011-08-16T13:32:00Z'
                    dated_on: '2011-08-15'
                    hours: '12.0'
                    project: '{{url}}/v2/projects/1'
                    task: '{{url}}/v2/tasks/1'
                    updated_at: '2011-08-16T13:32:00Z'
                    user: '{{url}}/v2/users/1'
      responses:
        '200':
          description: ''
  /v2/timeslips/{id}:
    get:
      tags:
        - Timeslips
      summary: Get a single timeslip
      description: Get a single timeslip
      operationId: getASingleTimeslip
      responses:
        '200':
          description: ''
    put:
      tags:
        - Timeslips
      summary: Update a timeslip
      description: Update a timeslip
      operationId: updateATimeslip
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                timeslip:
                  type: object
                  properties:
                    dated_on:
                      type: string
                      example: '2011-08-15'
                    hours:
                      type: string
                      example: '12.0'
                    project:
                      type: string
                      example: https://api.freeagent.com/v2/projects/1
                    task:
                      type: string
                      example: https://api.freeagent.com/v2/tasks/1
                    user:
                      type: string
                      example: https://api.freeagent.com/v2/users/1
            examples:
              Update a timeslip:
                value:
                  timeslip:
                    dated_on: '2011-08-15'
                    hours: '12.0'
                    project: https://api.freeagent.com/v2/projects/1
                    task: https://api.freeagent.com/v2/tasks/1
                    user: https://api.freeagent.com/v2/users/1
      responses:
        '200':
          description: ''
    delete:
      tags:
        - Timeslips
      summary: Delete a timeslip
      description: Delete a timeslip
      operationId: deleteATimeslip
      responses:
        '200':
          description: ''
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          example: ''
  /v2/accounting/trial_balance/summary:
    get:
      tags:
        - Trial Balance
      summary: Get the trial balance summary
      description: Get the trial balance summary
      operationId: getTheTrialBalanceSummary
      parameters:
        - name: to_date
          in: query
          schema:
            type: string
            example: '2018-01-01'
        - name: from_date
          in: query
          schema:
            type: string
            example: '2018-01-01'
      responses:
        '200':
          description: ''
  /v2/accounting/trial_balance/summary/opening_balances:
    get:
      tags:
        - Trial Balance
      summary: Get the opening balances
      description: Get the opening balances
      operationId: getTheOpeningBalances1
      responses:
        '200':
          description: ''
  /v2/users:
    get:
      tags:
        - Users
      summary: List All Users
      description: List All Users
      operationId: listAllUsers
      responses:
        '200':
          description: ''
    post:
      tags:
        - Users
      summary: Create a user
      description: Create a user
      operationId: createAUser
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: object
                  properties:
                    email:
                      type: string
                      example: joe@example.com
                    first_name:
                      type: string
                      example: Joe
                    last_name:
                      type: string
                      example: Bloggs
                    ni_number:
                      type: string
                      example: KC123456C
                    opening_mileage:
                      type: number
                      example: 0
                    permission_level:
                      type: number
                      example: 8
                    role:
                      type: string
                      example: Director
                    unique_tax_reference:
                      type: string
                      example: '1234567890'
            examples:
              Create a user:
                value:
                  user:
                    email: joe@example.com
                    first_name: Joe
                    last_name: Bloggs
                    ni_number: KC123456C
                    opening_mileage: 0
                    permission_level: 8
                    role: Director
                    unique_tax_reference: '1234567890'
      responses:
        '200':
          description: ''
  /v2/users/{id}:
    get:
      tags:
        - Users
      summary: Get a single user
      description: Get a single user
      operationId: getASingleUser
      responses:
        '200':
          description: ''
    put:
      tags:
        - Users
      summary: Update a user
      description: Update a user
      operationId: updateAUser
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: object
                  properties:
                    email:
                      type: string
                      example: joe@example.com
                    first_name:
                      type: string
                      example: Joe
                    last_name:
                      type: string
                      example: Bloggs
                    ni_number:
                      type: string
                      example: KC123456C
                    opening_mileage:
                      type: number
                      example: 0
                    permission_level:
                      type: number
                      example: 8
                    role:
                      type: string
                      example: Director
                    unique_tax_reference:
                      type: string
                      example: '1234567890'
            examples:
              Update a user:
                value:
                  user:
                    email: joe@example.com
                    first_name: Joe
                    last_name: Bloggs
                    ni_number: KC123456C
                    opening_mileage: 0
                    permission_level: 8
                    role: Director
                    unique_tax_reference: '1234567890'
      responses:
        '200':
          description: ''
    delete:
      tags:
        - Users
      summary: Delete a user
      description: Delete a user
      operationId: deleteAUser
      responses:
        '200':
          description: ''
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          example: ''
  /v2/users/me:
    get:
      tags:
        - Users
      summary: Get personal profile
      description: Get personal profile
      operationId: getPersonalProfile
      responses:
        '200':
          description: ''
tags:
  - name: Attachments
  - name: Bank Accounts
  - name: Bank Transaction Explanations
  - name: Bank Transactions
  - name: Bills
  - name: Capital Assets
  - name: Cashflow
  - name: Categories
  - name: CIS Bands
  - name: Company
  - name: Contacts
  - name: Credit Notes
  - name: Credit Note Transitions
  - name: Email Addresses
  - name: Estimates
  - name: Estimate Transitions
  - name: Estimates Items
  - name: Expenses
  - name: Invoices
  - name: Invoice Transitions
  - name: Journal Sets
  - name: Notes
  - name: Payroll
  - name: Price List Items
  - name: Profit & Loss
  - name: Projects
  - name: Recurring Invoices
  - name: Sales Tax Periods
  - name: Stock Items
  - name: Tasks
  - name: Timeslips
  - name: Timers
  - name: Trial Balance
  - name: Users
